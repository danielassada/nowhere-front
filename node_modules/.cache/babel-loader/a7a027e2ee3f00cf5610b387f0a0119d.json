{"ast":null,"code":"import _regeneratorRuntime from \"f:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"f:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"f:\\\\nowhere\\\\client\\\\src\\\\components\\\\global\\\\Weather.js\";\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport weather from \"./src/weather.png\";\nimport Modal from \"components/Modal\";\n\nvar Weather = function Weather() {\n  _this.state = {\n    latitude: 45.376296,\n    longitude: -75.651582,\n    el: null\n  };\n  var content = React.createElement(Modal, {\n    title: \"\",\n    content: \"\",\n    actions: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  });\n\n  function forecastWeather(_x, _x2) {\n    return _forecastWeather.apply(this, arguments);\n  }\n\n  function _forecastWeather() {\n    _forecastWeather = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(latitude, longitude) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(latitude, longitude);\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.get(\"http://api.openweathermap.org/data/2.5/weather?lat=\".concat(latitude, \"&lon=\").concat(longitude, \"&appid=219a5f4286f667b3eeb09e9a5efa7f85\"));\n\n            case 4:\n              response = _context.sent;\n              this.setState({\n                el: React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 17\n                  },\n                  __self: this\n                }, response.data.weather[0].main)\n              });\n              console.log(response.data.name);\n              console.log(response.data);\n              console.log(response.data.main.temp);\n              console.log(response.data.main.pressure);\n              console.log(response.data.main.humidity);\n              console.log(response.data.wind.speed);\n              console.log(response.data.wind.deg);\n              console.log(response.data.weather[0].main);\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 16]]);\n    }));\n    return _forecastWeather.apply(this, arguments);\n  }\n\n  return React.createElement(\"img\", {\n    onClick: function onClick() {\n      return _this.forecastWeather(_this.state.latitude, _this.state.longitude);\n    },\n    className: \"api_icon\",\n    src: weather,\n    alt: \"weather_icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n};\n\nexport default Weather;","map":{"version":3,"sources":["f:\\nowhere\\client\\src\\components\\global\\Weather.js"],"names":["React","axios","weather","Modal","Weather","state","latitude","longitude","el","content","forecastWeather","console","log","get","response","setState","data","main","name","temp","pressure","humidity","wind","speed","deg"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,EAAA,KAAI,CAACC,KAAL,GAAa;AAAEC,IAAAA,QAAQ,EAAE,SAAZ;AAAuBC,IAAAA,SAAS,EAAE,CAAC,SAAnC;AAA8CC,IAAAA,EAAE,EAAE;AAAlD,GAAb;AACA,MAAMC,OAAO,GAAG,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,EAAb;AAAgB,IAAA,OAAO,EAAC,EAAxB;AAA2B,IAAA,OAAO,EAAC,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB;;AAFoB,WAILC,eAJK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6BAIpB,iBAA+BJ,QAA/B,EAAyCC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AACEI,cAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ,EAAsBC,SAAtB;AADF;AAAA;AAAA,qBAG2BN,KAAK,CAACY,GAAN,8DACiCP,QADjC,kBACiDC,SADjD,6CAH3B;;AAAA;AAGUO,cAAAA,QAHV;AAMI,mBAAKC,QAAL,CAAc;AAAEP,gBAAAA,EAAE,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAMM,QAAQ,CAACE,IAAT,CAAcd,OAAd,CAAsB,CAAtB,EAAyBe,IAA/B;AAAN,eAAd;AACAN,cAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACE,IAAT,CAAcE,IAA1B;AACAP,cAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACE,IAArB;AACAL,cAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBE,IAA/B;AACAR,cAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBG,QAA/B;AACAT,cAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBI,QAA/B;AACAV,cAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACE,IAAT,CAAcM,IAAd,CAAmBC,KAA/B;AACAZ,cAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACE,IAAT,CAAcM,IAAd,CAAmBE,GAA/B;AACAb,cAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACE,IAAT,CAAcd,OAAd,CAAsB,CAAtB,EAAyBe,IAArC;AAdJ;AAAA;;AAAA;AAAA;AAAA;AAgBIN,cAAAA,OAAO,CAACC,GAAR;;AAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJoB;AAAA;AAAA;;AAwBpB,SACE;AACE,IAAA,OAAO,EAAE;AAAA,aACP,KAAI,CAACF,eAAL,CAAqB,KAAI,CAACL,KAAL,CAAWC,QAAhC,EAA0C,KAAI,CAACD,KAAL,CAAWE,SAArD,CADO;AAAA,KADX;AAIE,IAAA,SAAS,EAAC,UAJZ;AAKE,IAAA,GAAG,EAAEL,OALP;AAME,IAAA,GAAG,EAAC,cANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CAlCD;;AAoCA,eAAeE,OAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport weather from \"./src/weather.png\";\r\nimport Modal from \"components/Modal\";\r\n\r\nconst Weather = () => {\r\n  this.state = { latitude: 45.376296, longitude: -75.651582, el: null };\r\n  const content = <Modal title=\"\" content=\"\" actions=\"\" />;\r\n\r\n  async function forecastWeather(latitude, longitude) {\r\n    console.log(latitude, longitude);\r\n    try {\r\n      const response = await axios.get(\r\n        `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=219a5f4286f667b3eeb09e9a5efa7f85`\r\n      );\r\n      this.setState({ el: <div>{response.data.weather[0].main}</div> });\r\n      console.log(response.data.name);\r\n      console.log(response.data);\r\n      console.log(response.data.main.temp);\r\n      console.log(response.data.main.pressure);\r\n      console.log(response.data.main.humidity);\r\n      console.log(response.data.wind.speed);\r\n      console.log(response.data.wind.deg);\r\n      console.log(response.data.weather[0].main);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <img\r\n      onClick={() =>\r\n        this.forecastWeather(this.state.latitude, this.state.longitude)\r\n      }\r\n      className=\"api_icon\"\r\n      src={weather}\r\n      alt=\"weather_icon\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n"]},"metadata":{},"sourceType":"module"}