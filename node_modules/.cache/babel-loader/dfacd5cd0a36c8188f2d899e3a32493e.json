{"ast":null,"code":"import _classCallCheck from \"f:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"f:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"f:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"f:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"f:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"./streamStyle.css\";\n\nvar Mixer = require(\"@mixer/client-node\");\n\nvar client = new Mixer.Client(new Mixer.DefaultRequestRunner());\nvar channelName = process.argv[2];\nclient.use(new Mixer.OAuthProvider(client, {\n  clientId: \"Click here to get your Client ID!\"\n}));\nclient.request(\"GET\", \"channels/\".concat(channelName)).then(function (res) {\n  var viewers = res.body.viewersTotal;\n  console.log(\"You have \".concat(viewers, \" total views...\"));\n});\n\nvar MixerCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MixerCard, _React$Component);\n\n  function MixerCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MixerCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MixerCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      response: {}\n    };\n    return _this;\n  }\n\n  _createClass(MixerCard, [{\n    key: \"componentDidMount\",\n\n    /*   restRequest = async url => {\r\n      try {\r\n        let request = await axios.get(url);\r\n        return request;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }; */\n    value: function componentDidMount() {\n      var client = new Mixer.Client(new Mixer.DefaultRequestRunner());\n      var channelName = \"minecraft\";\n      client.use(new Mixer.OAuthProvider(client, {\n        clientId: \"a7672eec74f20d9f765fd8975b3613f7344cc641543ce51a\"\n      }));\n      client.request(\"GET\", \"channels/\".concat(channelName)).then(function (res) {\n        var viewers = res.body.viewersTotal;\n        console.log(\"You have \".concat(viewers, \" total views...\"));\n      });\n      /*     const callApi = async channel => {\r\n        const url = `https://mixer.com/api/v1/channels/${channel}/details`;\r\n        try {\r\n          const response = await axios.get(url);\r\n          console.log(response);\r\n            this.setState({\r\n            response: response\r\n          });\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      };\r\n      callApi(this.props.channel); */\n    }\n    /* renderContent() {\r\n      console.log(this.state.response);\r\n      if (this.state.response.online) {\r\n        return (\r\n          <a className=\"online\" href={`https://mixer.com/${this.props.channel}`}>\r\n            <img className=\"logo\" src={this.state.response.user.avatarUrl} />\r\n            <div className=\"desc\">\r\n              <h2>{this.state.response.token}</h2>\r\n              <br />\r\n              <p>\r\n                Game: {this.state.response.type.name} with{\" \"}\r\n                {this.state.response.viewrsCurrent.toString()} - viewers\r\n                <br />\r\n                started in: {this.state.response.updateAt}\r\n              </p>\r\n              <h3>Title: {this.state.response.name}</h3>\r\n            </div>\r\n          </a>\r\n        );\r\n      }\r\n        return null;\r\n    } */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      /* return <div>{this.renderContent()}</div>; */\n      return null;\n    }\n  }]);\n\n  return MixerCard;\n}(React.Component);\n\nexport default MixerCard;","map":{"version":3,"sources":["f:\\nowhere\\client\\src\\components\\streams\\MixerCard.js"],"names":["React","axios","Mixer","require","client","Client","DefaultRequestRunner","channelName","process","argv","use","OAuthProvider","clientId","request","then","res","viewers","body","viewersTotal","console","log","MixerCard","state","response","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;AAEA,IAAMC,KAAK,GAAGC,OAAO,CAAC,oBAAD,CAArB;;AAEA,IAAMC,MAAM,GAAG,IAAIF,KAAK,CAACG,MAAV,CAAiB,IAAIH,KAAK,CAACI,oBAAV,EAAjB,CAAf;AAEA,IAAMC,WAAW,GAAGC,OAAO,CAACC,IAAR,CAAa,CAAb,CAApB;AAEAL,MAAM,CAACM,GAAP,CACE,IAAIR,KAAK,CAACS,aAAV,CAAwBP,MAAxB,EAAgC;AAC9BQ,EAAAA,QAAQ,EAAE;AADoB,CAAhC,CADF;AAMAR,MAAM,CAACS,OAAP,CAAe,KAAf,qBAAkCN,WAAlC,GAAiDO,IAAjD,CAAsD,UAAAC,GAAG,EAAI;AAC3D,MAAMC,OAAO,GAAGD,GAAG,CAACE,IAAJ,CAASC,YAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,oBAAwBJ,OAAxB;AACD,CAHD;;IAIMK,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,K;;;;;;;AAER;;;;;;;;wCASoB;AAClB,UAAMnB,MAAM,GAAG,IAAIF,KAAK,CAACG,MAAV,CAAiB,IAAIH,KAAK,CAACI,oBAAV,EAAjB,CAAf;AAEA,UAAMC,WAAW,GAAG,WAApB;AAEAH,MAAAA,MAAM,CAACM,GAAP,CACE,IAAIR,KAAK,CAACS,aAAV,CAAwBP,MAAxB,EAAgC;AAC9BQ,QAAAA,QAAQ,EAAE;AADoB,OAAhC,CADF;AAMAR,MAAAA,MAAM,CAACS,OAAP,CAAe,KAAf,qBAAkCN,WAAlC,GAAiDO,IAAjD,CAAsD,UAAAC,GAAG,EAAI;AAC3D,YAAMC,OAAO,GAAGD,GAAG,CAACE,IAAJ,CAASC,YAAzB;AACAC,QAAAA,OAAO,CAACC,GAAR,oBAAwBJ,OAAxB;AACD,OAHD;AAKA;;;;;;;;;;;;;AAcD;AACD;;;;;;;;;;;;;;;;;;;;;;;;;6BAuBS;AACP;AACA,aAAO,IAAP;AACD;;;;EArEqBhB,KAAK,CAACwB,S;;AAuE9B,eAAeH,SAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./streamStyle.css\";\r\n\r\nconst Mixer = require(\"@mixer/client-node\");\r\n\r\nconst client = new Mixer.Client(new Mixer.DefaultRequestRunner());\r\n\r\nconst channelName = process.argv[2];\r\n\r\nclient.use(\r\n  new Mixer.OAuthProvider(client, {\r\n    clientId: \"Click here to get your Client ID!\"\r\n  })\r\n);\r\n\r\nclient.request(\"GET\", `channels/${channelName}`).then(res => {\r\n  const viewers = res.body.viewersTotal;\r\n  console.log(`You have ${viewers} total views...`);\r\n});\r\nclass MixerCard extends React.Component {\r\n  state = { response: {} };\r\n\r\n  /*   restRequest = async url => {\r\n    try {\r\n      let request = await axios.get(url);\r\n      return request;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }; */\r\n\r\n  componentDidMount() {\r\n    const client = new Mixer.Client(new Mixer.DefaultRequestRunner());\r\n\r\n    const channelName = \"minecraft\";\r\n\r\n    client.use(\r\n      new Mixer.OAuthProvider(client, {\r\n        clientId: \"a7672eec74f20d9f765fd8975b3613f7344cc641543ce51a\"\r\n      })\r\n    );\r\n\r\n    client.request(\"GET\", `channels/${channelName}`).then(res => {\r\n      const viewers = res.body.viewersTotal;\r\n      console.log(`You have ${viewers} total views...`);\r\n    });\r\n\r\n    /*     const callApi = async channel => {\r\n      const url = `https://mixer.com/api/v1/channels/${channel}/details`;\r\n      try {\r\n        const response = await axios.get(url);\r\n        console.log(response);\r\n\r\n        this.setState({\r\n          response: response\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    callApi(this.props.channel); */\r\n  }\r\n  /* renderContent() {\r\n    console.log(this.state.response);\r\n    if (this.state.response.online) {\r\n      return (\r\n        <a className=\"online\" href={`https://mixer.com/${this.props.channel}`}>\r\n          <img className=\"logo\" src={this.state.response.user.avatarUrl} />\r\n          <div className=\"desc\">\r\n            <h2>{this.state.response.token}</h2>\r\n            <br />\r\n            <p>\r\n              Game: {this.state.response.type.name} with{\" \"}\r\n              {this.state.response.viewrsCurrent.toString()} - viewers\r\n              <br />\r\n              started in: {this.state.response.updateAt}\r\n            </p>\r\n            <h3>Title: {this.state.response.name}</h3>\r\n          </div>\r\n        </a>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  } */\r\n  render() {\r\n    /* return <div>{this.renderContent()}</div>; */\r\n    return null;\r\n  }\r\n}\r\nexport default MixerCard;\r\n"]},"metadata":{},"sourceType":"module"}