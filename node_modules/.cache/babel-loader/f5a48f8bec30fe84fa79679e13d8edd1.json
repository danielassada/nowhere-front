{"ast":null,"code":"import _classCallCheck from \"F:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\nowhere\\\\client\\\\src\\\\components\\\\auth\\\\GoogleAuth.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\n\nvar GoogleAuth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GoogleAuth, _React$Component);\n\n  function GoogleAuth() {\n    _classCallCheck(this, GoogleAuth);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GoogleAuth).apply(this, arguments));\n  }\n\n  _createClass(GoogleAuth, [{\n    key: \"renderAuthButton\",\n\n    /*  componentDidMount() {\r\n      window.gapi.load(\"client:auth2\", () => {\r\n        window.gapi.client\r\n          .init({\r\n            clientId:\r\n              \"81803597099-2bse4uts1o0dc4dpp9661sncr3snm282.apps.googleusercontent.com\",\r\n            scope: \"email\"\r\n          })\r\n          .then(() => {\r\n            this.auth = window.gapi.auth2.getAuthInstance();\r\n            this.onAuthChange(this.auth.isSignedIn.get());\r\n            this.auth.isSignedIn.listen(this.onAuthChange);\r\n          });\r\n      });\r\n    }\r\n    onAuthChange = isSignedIn => {\r\n      if (!isSignedIn) {\r\n        this.props.signIn(this.auth.currentUser.get().getId());\r\n      } else {\r\n        this.props.signOut();\r\n      }\r\n    };\r\n    onSignInClick = () => {\r\n      this.auth.signIn();\r\n    };\r\n    onSignOutClick = () => {\r\n      this.auth.signOut();\r\n    }; */\n    value: function renderAuthButton() {\n      if (this.props.isSignedIn === null) {\n        console.log(this.props);\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"google\");\n      } else if (this.props.isSignedIn) {\n        return React.createElement(\"button\", {\n          onClick: this.onSignOutClick,\n          className: \"ui red google button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), \"Sign Out\");\n      } else {\n        return React.createElement(\"button\", {\n          onClick: this.onSignInClick,\n          className: \"ui red google button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), \"Sign in with Google\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.renderAuthButton());\n    }\n  }]);\n\n  return GoogleAuth;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, actions)(GoogleAuth);","map":{"version":3,"sources":["F:\\nowhere\\client\\src\\components\\auth\\GoogleAuth.js"],"names":["React","connect","actions","GoogleAuth","props","isSignedIn","console","log","onSignOutClick","onSignInClick","renderAuthButton","Component","mapStateToProps","state","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;;IAEMC,U;;;;;;;;;;;;;;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;uCA6BmB;AACjB,UAAI,KAAKC,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AAClCC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AAEA,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,OAJD,MAIO,IAAI,KAAKA,KAAL,CAAWC,UAAf,EAA2B;AAChC,eACE;AAAQ,UAAA,OAAO,EAAE,KAAKG,cAAtB;AAAsC,UAAA,SAAS,EAAC,sBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,aADF;AAMD,OAPM,MAOA;AACL,eACE;AAAQ,UAAA,OAAO,EAAE,KAAKC,aAAtB;AAAqC,UAAA,SAAS,EAAC,sBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,wBADF;AAMD;AACF;;;6BACQ;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKC,gBAAL,EAAN,CAAP;AACD;;;;EArDsBV,KAAK,CAACW,S;;AAwD/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AAAER,IAAAA,UAAU,EAAEQ,KAAK,CAACC,IAAN,CAAWT;AAAzB,GAAP;AACD,CAFD;;AAGA,eAAeJ,OAAO,CACpBW,eADoB,EAEpBV,OAFoB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions\";\r\n\r\nclass GoogleAuth extends React.Component {\r\n  /*  componentDidMount() {\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"81803597099-2bse4uts1o0dc4dpp9661sncr3snm282.apps.googleusercontent.com\",\r\n          scope: \"email\"\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n  onAuthChange = isSignedIn => {\r\n    if (!isSignedIn) {\r\n      this.props.signIn(this.auth.currentUser.get().getId());\r\n    } else {\r\n      this.props.signOut();\r\n    }\r\n  };\r\n  onSignInClick = () => {\r\n    this.auth.signIn();\r\n  };\r\n  onSignOutClick = () => {\r\n    this.auth.signOut();\r\n  }; */\r\n\r\n  renderAuthButton() {\r\n    if (this.props.isSignedIn === null) {\r\n      console.log(this.props);\r\n\r\n      return <div>google</div>;\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\r\n          <i className=\"google icon\" />\r\n          Sign Out\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\r\n          <i className=\"google icon\" />\r\n          Sign in with Google\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return <div>{this.renderAuthButton()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { isSignedIn: state.auth.isSignedIn };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(GoogleAuth);\r\n"]},"metadata":{},"sourceType":"module"}