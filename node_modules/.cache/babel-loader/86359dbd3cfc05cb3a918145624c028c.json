{"ast":null,"code":"import _classCallCheck from \"F:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"F:\\\\nowhere\\\\client\\\\src\\\\components\\\\links\\\\LinksForm.js\",\n    _this2 = this;\n\nimport React, { Component } from \"react\";\nimport { Transition } from \"semantic-ui-react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"actions\";\nimport \"components/links/linksFormStyle.css\";\n\nvar LinksForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LinksForm, _Component);\n\n  function LinksForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LinksForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LinksForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleVisibility = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        visible: !_this.state.visible\n      });\n    };\n\n    _this.onSubmit = function (formProps) {\n      _this.props.addLink(formProps, function () {});\n    };\n\n    return _this;\n  }\n\n  _createClass(LinksForm, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log(this);\n    }\n  }, {\n    key: \"renderResponse\",\n    value: function renderResponse() {\n      if (this.props.genericResponse) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, this.props.genericResponse);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var animation = \"fly up\";\n      var visible = true;\n      var duration = 1100;\n      var handleSubmit = this.props.handleSubmit;\n      return React.createElement(\"div\", {\n        id: \"linksForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.renderResponse(), React.createElement(\"button\", {\n        className: \"ui primary button puller\",\n        onClick: this.handleVisibility,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Add Link\"), React.createElement(Transition.Group, {\n        animation: animation,\n        duration: duration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, visible && React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.onSubmit),\n        className: \"ui form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Title \"), React.createElement(Field, {\n        name: \"title\",\n        type: \"text\",\n        component: \"input\",\n        autoComplete: \"none\",\n        className: \"ui input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(\"fieldset\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Link \"), React.createElement(Field, {\n        name: \"link\",\n        type: \"text\",\n        component: \"input\",\n        autoComplete: \"none\",\n        className: \"ui input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(\"fieldset\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Description \"), React.createElement(Field, {\n        name: \"description\",\n        type: \"text\",\n        component: \"textarea\",\n        autoComplete: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"fieldset\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"genre\",\n        component: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: \"nihongo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"nihongo\"), React.createElement(\"option\", {\n        value: \"series\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"series\"), React.createElement(\"option\", {\n        value: \"anime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"anime\"), React.createElement(\"option\", {\n        value: \"programing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"programing\"), React.createElement(\"option\", {\n        value: \"other\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"other\"))), React.createElement(\"button\", {\n        className: \"ui primary button centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return LinksForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  console.log(state);\n  console.log(ownProps);\n\n  if (state.genericResponse) {\n    console.log(state);\n    console.log(ownProps);\n    return {\n      genericResponse: state.genericResponse\n    };\n  }\n\n  return {\n    submit: _this2\n  };\n};\n\nexport default compose(connect(mapStateToProps, actions), reduxForm({\n  form: \"addLinkForm\"\n}))(LinksForm);","map":{"version":3,"sources":["F:\\nowhere\\client\\src\\components\\links\\LinksForm.js"],"names":["React","Component","Transition","reduxForm","Field","compose","connect","actions","LinksForm","handleVisibility","e","preventDefault","setState","visible","state","onSubmit","formProps","props","addLink","console","log","genericResponse","animation","duration","handleSubmit","renderResponse","mapStateToProps","ownProps","submit","form"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Transition } from \"semantic-ui-react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"actions\";\r\n\r\nimport \"components/links/linksFormStyle.css\";\r\n\r\nclass LinksForm extends Component {\r\n  componentDidUpdate() {\r\n    console.log(this);\r\n  }\r\n  handleVisibility = e => {\r\n    e.preventDefault();\r\n    this.setState({ visible: !this.state.visible });\r\n  };\r\n  onSubmit = formProps => {\r\n    this.props.addLink(formProps, () => {});\r\n  };\r\n  renderResponse() {\r\n    if (this.props.genericResponse) {\r\n      return <div>{this.props.genericResponse}</div>;\r\n    }\r\n    return null;\r\n  }\r\n  render() {\r\n    const animation = \"fly up\";\r\n    const visible = true;\r\n    const duration = 1100;\r\n    const { handleSubmit } = this.props;\r\n\r\n    return (\r\n      <div id=\"linksForm\">\r\n        {this.renderResponse()}\r\n        <button\r\n          className=\"ui primary button puller\"\r\n          onClick={this.handleVisibility}\r\n        >\r\n          Add Link\r\n        </button>\r\n        <Transition.Group animation={animation} duration={duration}>\r\n          {visible && (\r\n            <form onSubmit={handleSubmit(this.onSubmit)} className=\"ui form\">\r\n              <fieldset className=\"field\">\r\n                <label>Title </label>\r\n                <Field\r\n                  name=\"title\"\r\n                  type=\"text\"\r\n                  component=\"input\"\r\n                  autoComplete=\"none\"\r\n                  className=\"ui input\"\r\n                />\r\n              </fieldset>\r\n\r\n              <fieldset className=\"field\">\r\n                <label>Link </label>\r\n                <Field\r\n                  name=\"link\"\r\n                  type=\"text\"\r\n                  component=\"input\"\r\n                  autoComplete=\"none\"\r\n                  className=\"ui input\"\r\n                />\r\n              </fieldset>\r\n              <fieldset className=\"field\">\r\n                <label>Description </label>\r\n                <Field\r\n                  name=\"description\"\r\n                  type=\"text\"\r\n                  component=\"textarea\"\r\n                  autoComplete=\"none\"\r\n                />\r\n              </fieldset>\r\n              <fieldset className=\"field\">\r\n                <Field name=\"genre\" component=\"select\">\r\n                  <option />\r\n                  <option value=\"nihongo\">nihongo</option>\r\n                  <option value=\"series\">series</option>\r\n                  <option value=\"anime\">anime</option>\r\n                  <option value=\"programing\">programing</option>\r\n                  <option value=\"other\">other</option>\r\n                </Field>\r\n              </fieldset>\r\n              <button className=\"ui primary button centered\">Submit</button>\r\n            </form>\r\n          )}\r\n        </Transition.Group>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(state);\r\n  console.log(ownProps);\r\n  if (state.genericResponse) {\r\n    console.log(state);\r\n    console.log(ownProps);\r\n    return { genericResponse: state.genericResponse };\r\n  }\r\n  return { submit: this };\r\n};\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    actions\r\n  ),\r\n  reduxForm({ form: \"addLinkForm\" })\r\n)(LinksForm);\r\n"]},"metadata":{},"sourceType":"module"}