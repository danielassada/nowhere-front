{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { AUTH_USER, AUTH_ERROR } from \"./types\";\nexport var signup = function signup(formProps, callback) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.post(\"http://localhost:3090/signup\", formProps);\n\n              case 3:\n                response = _context.sent;\n                dispatch({\n                  type: AUTH_USER,\n                  payload: response.data.token\n                });\n                localStorage.setItem(\"token\", response.data.token);\n                callback();\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch({\n                  type: AUTH_ERROR,\n                  payload: \"Email in use\"\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var signin = function signin(formProps, callback) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.post(\"http://localhost:3090/signin\", formProps);\n\n              case 3:\n                response = _context2.sent;\n                dispatch({\n                  type: AUTH_USER,\n                  payload: response.data.token\n                });\n                localStorage.setItem(\"token\", response.data.token);\n                callback();\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch({\n                  type: AUTH_ERROR,\n                  payload: \"Invalid login credentials\"\n                });\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 9]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var signout = function signout() {\n  localStorage.removeItem(\"token\");\n  return {\n    type: AUTH_USER,\n    payload: \"\"\n  };\n};","map":{"version":3,"sources":["F:\\nowhere\\client\\src\\actions\\index.js"],"names":["axios","AUTH_USER","AUTH_ERROR","signup","formProps","callback","dispatch","post","response","type","payload","data","token","localStorage","setItem","signin","signout","removeItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,SAAtC;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,SAAD,EAAYC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAyB,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEpBN,KAAK,CAACO,IAAN,CACrB,8BADqB,EAErBH,SAFqB,CAFoB;;AAAA;AAErCI,gBAAAA,QAFqC;AAM3CF,gBAAAA,QAAQ,CAAC;AAAEG,kBAAAA,IAAI,EAAER,SAAR;AAAmBS,kBAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAA1C,iBAAD,CAAR;AACAC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,QAAQ,CAACG,IAAT,CAAcC,KAA5C;AACAP,gBAAAA,QAAQ;AARmC;AAAA;;AAAA;AAAA;AAAA;AAU3CC,gBAAAA,QAAQ,CAAC;AAAEG,kBAAAA,IAAI,EAAEP,UAAR;AAAoBQ,kBAAAA,OAAO,EAAE;AAA7B,iBAAD,CAAR;;AAV2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAzB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;AAaP,OAAO,IAAMK,MAAM,GAAG,SAATA,MAAS,CAACX,SAAD,EAAYC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAyB,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEpBN,KAAK,CAACO,IAAN,CACrB,8BADqB,EAErBH,SAFqB,CAFoB;;AAAA;AAErCI,gBAAAA,QAFqC;AAM3CF,gBAAAA,QAAQ,CAAC;AAAEG,kBAAAA,IAAI,EAAER,SAAR;AAAmBS,kBAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAA1C,iBAAD,CAAR;AACAC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,QAAQ,CAACG,IAAT,CAAcC,KAA5C;AACAP,gBAAAA,QAAQ;AARmC;AAAA;;AAAA;AAAA;AAAA;AAU3CC,gBAAAA,QAAQ,CAAC;AAAEG,kBAAAA,IAAI,EAAEP,UAAR;AAAoBQ,kBAAAA,OAAO,EAAE;AAA7B,iBAAD,CAAR;;AAV2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAzB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;AAaP,OAAO,IAAMM,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3BH,EAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACA,SAAO;AAAER,IAAAA,IAAI,EAAER,SAAR;AAAmBS,IAAAA,OAAO,EAAE;AAA5B,GAAP;AACD,CAHM","sourcesContent":["import axios from \"axios\";\r\nimport { AUTH_USER, AUTH_ERROR } from \"./types\";\r\n\r\nexport const signup = (formProps, callback) => async dispatch => {\r\n  try {\r\n    const response = await axios.post(\r\n      \"http://localhost:3090/signup\",\r\n      formProps\r\n    );\r\n    dispatch({ type: AUTH_USER, payload: response.data.token });\r\n    localStorage.setItem(\"token\", response.data.token);\r\n    callback();\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ERROR, payload: \"Email in use\" });\r\n  }\r\n};\r\nexport const signin = (formProps, callback) => async dispatch => {\r\n  try {\r\n    const response = await axios.post(\r\n      \"http://localhost:3090/signin\",\r\n      formProps\r\n    );\r\n    dispatch({ type: AUTH_USER, payload: response.data.token });\r\n    localStorage.setItem(\"token\", response.data.token);\r\n    callback();\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ERROR, payload: \"Invalid login credentials\" });\r\n  }\r\n};\r\nexport const signout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  return { type: AUTH_USER, payload: \"\" };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}