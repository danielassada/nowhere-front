{"ast":null,"code":"import _classCallCheck from \"f:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"f:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"f:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"f:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"f:\\\\nowhere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"f:\\\\nowhere\\\\client\\\\src\\\\components\\\\global\\\\Cell.js\";\nimport React from \"react\";\nimport { Flag, Segment } from \"semantic-ui-react\";\nimport newspaper from \"./src/newspaper.png\";\nimport weather from \"./src/weather.png\";\nimport twitter from \"./src/twitter.png\";\nimport youtube from \"./src/youtube.png\";\n/* import \"./globalStyle.css\"; */\n\nvar Cell =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cell, _React$Component);\n\n  function Cell() {\n    _classCallCheck(this, Cell);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Cell).apply(this, arguments));\n  }\n\n  _createClass(Cell, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"forecastWeather\",\n    value: function forecastWeather(latitude, longitude) {\n      console.log(latitude, longitude);\n      var xhttp = new XMLHttpRequest();\n      xhttp.open(\"GET\", \"weather/\" + lat + \"/\" + long, true);\n      xhttp.responseType = \"text\";\n      xhttp.send();\n\n      xhttp.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n          var response = JSON.parse(this.responseText);\n          console.log(response);\n          console.log(typeof response);\n          var weatherType = response.weather[0].description;\n          var kelvin = response.main.temp;\n          var windSpeed = response.wind.speed;\n          var city = response.name;\n          var country = response.sys.country;\n          console.log(weatherType);\n          console.log(kelvin);\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Flag, {\n        name: this.props.code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"fuso_\".concat(this.props.code),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.props.name), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"canada_news\",\n        src: newspaper,\n        className: \"api_icon news\",\n        alt: \"icon_newspaper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        id: \"weather_ca\",\n        onClick: function onClick() {\n          return _this.forecastWeather(45.376296, -75.651582);\n        },\n        className: \"api_icon\",\n        src: weather,\n        alt: \"weather_icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        id: \"twitter_ca\"\n        /* onClick=\"twitter(45.376296, -75.651582)\" */\n        ,\n        className: \"api_icon\",\n        src: twitter,\n        alt: \"icon_twitter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        id: \"youtube_ca\"\n        /* onClick=\"youtube('ca')\" */\n        ,\n        className: \"api_icon\",\n        src: youtube,\n        alt: \"icon_youtube\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Cell;\n}(React.Component);\n\nexport default Cell;","map":{"version":3,"sources":["f:\\nowhere\\client\\src\\components\\global\\Cell.js"],"names":["React","Flag","Segment","newspaper","weather","twitter","youtube","Cell","latitude","longitude","console","log","xhttp","XMLHttpRequest","open","lat","long","responseType","send","onreadystatechange","readyState","status","response","JSON","parse","responseText","weatherType","description","kelvin","main","temp","windSpeed","wind","speed","city","name","country","sys","props","code","forecastWeather","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,mBAA9B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA;;IAEMC,I;;;;;;;;;;;;;wCACgB,CAAE;;;oCACNC,Q,EAAUC,S,EAAW;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBC,SAAtB;AACA,UAAIG,KAAK,GAAG,IAAIC,cAAJ,EAAZ;AACAD,MAAAA,KAAK,CAACE,IAAN,CAAW,KAAX,EAAkB,aAAaC,GAAb,GAAmB,GAAnB,GAAyBC,IAA3C,EAAiD,IAAjD;AACAJ,MAAAA,KAAK,CAACK,YAAN,GAAqB,MAArB;AACAL,MAAAA,KAAK,CAACM,IAAN;;AAEAN,MAAAA,KAAK,CAACO,kBAAN,GAA2B,YAAW;AACpC,YAAI,KAAKC,UAAL,IAAmB,CAAnB,IAAwB,KAAKC,MAAL,IAAe,GAA3C,EAAgD;AAC9C,cAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKC,YAAhB,CAAf;AACAf,UAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ;AACAZ,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAOW,QAAnB;AACA,cAAII,WAAW,GAAGJ,QAAQ,CAAClB,OAAT,CAAiB,CAAjB,EAAoBuB,WAAtC;AACA,cAAIC,MAAM,GAAGN,QAAQ,CAACO,IAAT,CAAcC,IAA3B;AACA,cAAIC,SAAS,GAAGT,QAAQ,CAACU,IAAT,CAAcC,KAA9B;AACA,cAAIC,IAAI,GAAGZ,QAAQ,CAACa,IAApB;AACA,cAAIC,OAAO,GAAGd,QAAQ,CAACe,GAAT,CAAaD,OAA3B;AACA1B,UAAAA,OAAO,CAACC,GAAR,CAAYe,WAAZ;AACAhB,UAAAA,OAAO,CAACC,GAAR,CAAYiB,MAAZ;AACD;AACF,OAbD;AAcD;;;6BACQ;AAAA;;AACP,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKU,KAAL,CAAWC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,EAAE,iBAAU,KAAKD,KAAL,CAAWC,IAArB,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKD,KAAL,CAAWH,IAAhB,CAHF,EAIE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,EAAE,EAAC,aADL;AAEE,QAAA,GAAG,EAAEhC,SAFP;AAGE,QAAA,SAAS,EAAC,eAHZ;AAIE,QAAA,GAAG,EAAC,gBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AACE,QAAA,EAAE,EAAC,YADL;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACqC,eAAL,CAAqB,SAArB,EAAgC,CAAC,SAAjC,CAAN;AAAA,SAFX;AAGE,QAAA,SAAS,EAAC,UAHZ;AAIE,QAAA,GAAG,EAAEpC,OAJP;AAKE,QAAA,GAAG,EAAC,cALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAcE;AACE,QAAA,EAAE,EAAC;AACH;AAFF;AAGE,QAAA,SAAS,EAAC,UAHZ;AAIE,QAAA,GAAG,EAAEC,OAJP;AAKE,QAAA,GAAG,EAAC,cALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,EAqBE;AACE,QAAA,EAAE,EAAC;AACH;AAFF;AAGE,QAAA,SAAS,EAAC,UAHZ;AAIE,QAAA,GAAG,EAAEC,OAJP;AAKE,QAAA,GAAG,EAAC,cALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,CAJF,CADF;AAoCD;;;;EA7DgBN,KAAK,CAACyC,S;;AAgEzB,eAAelC,IAAf","sourcesContent":["import React from \"react\";\r\nimport { Flag, Segment } from \"semantic-ui-react\";\r\nimport newspaper from \"./src/newspaper.png\";\r\nimport weather from \"./src/weather.png\";\r\nimport twitter from \"./src/twitter.png\";\r\nimport youtube from \"./src/youtube.png\";\r\n\r\n/* import \"./globalStyle.css\"; */\r\n\r\nclass Cell extends React.Component {\r\n  componentDidMount() {}\r\n  forecastWeather(latitude, longitude) {\r\n    console.log(latitude, longitude);\r\n    var xhttp = new XMLHttpRequest();\r\n    xhttp.open(\"GET\", \"weather/\" + lat + \"/\" + long, true);\r\n    xhttp.responseType = \"text\";\r\n    xhttp.send();\r\n\r\n    xhttp.onreadystatechange = function() {\r\n      if (this.readyState == 4 && this.status == 200) {\r\n        var response = JSON.parse(this.responseText);\r\n        console.log(response);\r\n        console.log(typeof response);\r\n        var weatherType = response.weather[0].description;\r\n        var kelvin = response.main.temp;\r\n        var windSpeed = response.wind.speed;\r\n        var city = response.name;\r\n        var country = response.sys.country;\r\n        console.log(weatherType);\r\n        console.log(kelvin);\r\n      }\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <Segment>\r\n        <Flag name={this.props.code} />\r\n        <div id={`fuso_${this.props.code}`} />\r\n        <h5>{this.props.name}</h5>\r\n        <div className=\"row\">\r\n          <img\r\n            id=\"canada_news\"\r\n            src={newspaper}\r\n            className=\"api_icon news\"\r\n            alt=\"icon_newspaper\"\r\n          />\r\n          <img\r\n            id=\"weather_ca\"\r\n            onClick={() => this.forecastWeather(45.376296, -75.651582)}\r\n            className=\"api_icon\"\r\n            src={weather}\r\n            alt=\"weather_icon\"\r\n          />\r\n          <img\r\n            id=\"twitter_ca\"\r\n            /* onClick=\"twitter(45.376296, -75.651582)\" */\r\n            className=\"api_icon\"\r\n            src={twitter}\r\n            alt=\"icon_twitter\"\r\n          />\r\n          <img\r\n            id=\"youtube_ca\"\r\n            /* onClick=\"youtube('ca')\" */\r\n            className=\"api_icon\"\r\n            src={youtube}\r\n            alt=\"icon_youtube\"\r\n          />\r\n        </div>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cell;\r\n"]},"metadata":{},"sourceType":"module"}